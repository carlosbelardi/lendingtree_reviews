c
@parsed_url.host
@parsed_url.is_a?(URI::HTTP)
@parsed_url.is_a(URI::HTTP)
@parsed_url
c
@url.is_a?(URI::HTTP)
@url
c
n
c
@url.is_a?(URI::HTTP)
@url
c
response
n
c
http_response
n
c
n
c
n
render_error(e.message, status: :bad_request)
n
c
render_error(e)
render_error()
render_error(e.message, status: :bad_request)
n
c
n
e.message
e
n
c
n
c
n
c
HTTParty.get(url)
url
c
data
n
page_reviews
n
list=
page
n
list=
http_response
c
response.body
response.code
response
c
n
Date.parse(new_date).to_s
n
review.css('div.reviewDetail').css('div.hideText').css('p.consumerReviewDate').text.gsub(/^Reviewed in/, '').strip
review.css('div.reviewDetail').css('div.hideText').css('p.consumerReviewDate').text.gsub(/^Reviewed in/, '')
review.css('div.reviewDetail').css('div.hideText').css('p.consumerReviewDate').text
c
review.css('div.reviewDetail').css('p.reviewTitle').text
review.css('div.reviewDetail').css('p.reviewTitle')
list=
review.css('div.reviewDetail')
n
c
n
data
c
n
new_date
n
list=
review
c
list=
help list
list
help
list
where
frame
disp
info line
info
thread
source
var all
var
show
i
page_reviews
n
page
n
data
n
http_response
http_reponse
n
response.code
n
c
http_response
n
response
response.status
n
url
c
response.message
response.body
response.code
response
response = HTTParty.get(url)
HTTParty.get(url)
url
c
n
c
nn
n
params
